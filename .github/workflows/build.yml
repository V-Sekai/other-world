name: Package V-Sekai SDK

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "**"

jobs:
  build:
    name: Validate Desync on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            triplet: x86_64-unknown-linux-gnu

    steps:
      - name: Checkout desync
        uses: actions/checkout@v2
        with:
          repository: V-Sekai/desync
          fetch-depth: 0

      - uses: actions/setup-go@v2
        with:
          go-version: "^1.15.6"

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - run: go test
      - run: GOOS=windows GOARCH=amd64 go build -o ./archive/desync-windows-amd64.exe ./cmd/desync
      - run: GOOS=darwin GOARCH=amd64 go build -o ./archive/desync-macos-amd64 ./cmd/desync
      - run: GOOS=linux GOARCH=amd64 go build -o ./archive/desync-linux-amd64 ./cmd/desync
      - name: Debug
        shell: bash
        run: |
          pwd
          ls -la

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: other

      - run: chmod +x ./archive/desync-linux-amd64

      - name: Install Ninja Build
        run: sudo apt-get update && sudo apt-get install -y libglfw3-dev libxinerama-dev libxcursor-dev libxi-dev libsuitesparse-dev libmetis-dev ninja-build

      - name: Run CMake, Install, Copy to Archive, and Clean Up
        run: |
          root_dir=$(pwd)
          for dir in PIPELINE_geodesiac_path PIPELINE_intrinsic_triangulations; do
            build_dir=${root_dir}/other/$dir/build
            install_dir=${root_dir}/other/${dir}_install
            archive_dir=${root_dir}/archive/${dir}_install/

            mkdir -p $build_dir
            cd $build_dir

            cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$install_dir -G Ninja ${root_dir}/other/$dir
            ninja
            cmake --install .
            cp -r $install_dir $archive_dir

            rm -rf ${root_dir}/other/$dir/*
          done

      - name: Package Code
        run: |
          mkdir -p archive/store
          for dir in ART_base_mesh SERVICE_flux_config PIPELINE_cloth_dynamics PIPELINE_intrinsic_triangulations TOOL_okhsl_picker TOOL_task_goal_planner PIPELINE_convex_decomposition TOOL_launcher PIPELINE_animation_provider TOOL_xr_grid SERVICE_docker_groups PIPELINE_blender PIPELINE_geodesiac_path TOOL_model_explorer TOOL_shader_motion VSK_game TOOL_manuals LICENSE README.md SERVICE_mvsqlite GODOT_mvsqlite SERVICE_pipeline SERVICE_vsona_bot TOOL_desync TOOL_sample_gui_in_vr VSK_godot; do
          lower_dir=$(echo "$dir" | tr '[:upper:]' '[:lower:]')
          ./archive/desync-linux-amd64 tar -i -s archive/store --chunk-size 4096:16384:65536 archive/$lower_dir.caidx other/$lower_dir
          done

      - name: Package Cockroachdb
        run: |
          mkdir -p archive/store
          wget -qO- https://binaries.cockroachdb.com/cockroach-v23.2.3.linux-amd64.tgz | tar xvz
          mv cockroach-v23.2.3.linux-amd64/cockroach cockroach-v23.2.3.linux-amd64/cockroach-${{ matrix.triplet }}
          cp -i cockroach-v23.2.3.linux-amd64/cockroach-${{ matrix.triplet }} ./archive/

      - name: Package Foundationdb
        run: |
          mkdir -p archive/store
          wget https://github.com/apple/foundationdb/releases/download/7.1.29/foundationdb-clients_7.1.29-1_amd64.deb
          wget https://github.com/apple/foundationdb/releases/download/7.1.29/foundationdb-server_7.1.29-1_amd64.deb
          wget https://github.com/apple/foundationdb/releases/download/7.1.29/foundationdb-7.1.29-x64.msi
          mv foundationdb-clients_7.1.29-1_amd64.deb archive/
          mv foundationdb-server_7.1.29-1_amd64.deb archive/
          mv foundationdb-7.1.29-x64.msi archive/

      - name: Generate index.html
        if: github.ref == 'refs/heads/main'
        run: |
          echo "<!DOCTYPE html>" > ./archive/index.html
          echo "<html>" >> ./archive/index.html
          echo "<head>" >> ./archive/index.html
          echo "<title>V-Sekai Kit Contents</title>" >> ./archive/index.html
          echo "</head>" >> ./archive/index.html
          echo "<body>" >> ./archive/index.html
          echo "<h1>V-Sekai Kit Contents</h1>" >> ./archive/index.html
          echo "<h2>Instructions</h2>" >> ./archive/index.html

          # Windows
          echo "<h3>Windows</h3>" >> ./archive/index.html
          echo "<pre><code>./desync-windows-amd64.exe untar -s https://molassesbamboo.sfo3.digitaloceanspaces.com/v-sekai/v-sekai-game/store -i https://molassesbamboo.sfo3.digitaloceanspaces.com/v-sekai/v-sekai-game/vsk_game.caidx VSK_game --no-same-owner</code></pre>" >> ./archive/index.html
          echo "<pre><code>./desync-windows-amd64.exe untar -s https://molassesbamboo.sfo3.digitaloceanspaces.com/v-sekai/v-sekai-game/store -i https://molassesbamboo.sfo3.digitaloceanspaces.com/v-sekai/v-sekai-game/vsk_godot.caidx VSK_godot --no-same-owner</code></pre>" >> ./archive/index.html

          # Mac
          echo "<h3>Mac</h3>" >> ./archive/index.html
          echo "<pre><code>./desync-macos-amd64 untar -s https://molassesbamboo.sfo3.digitaloceanspaces.com/v-sekai/v-sekai-game/store -i https://molassesbamboo.sfo3.digitaloceanspaces.com/v-sekai/v-sekai-game/vsk_game.caidx VSK_game --no-same-owner</code></pre>" >> ./archive/index.html
          echo "<pre><code>./desync-macos-amd64 untar -s https://molassesbamboo.sfo3.digitaloceanspaces.com/v-sekai/v-sekai-game/store -i https://molassesbamboo.sfo3.digitaloceanspaces.com/v-sekai/v-sekai-game/vsk_godot.caidx VSK_godot --no-same-owner</code></pre>" >> ./archive/index.html

          # Linux
          echo "<h3>Linux</h3>" >> ./archive/index.html
          echo "<pre><code>./desync-linux-amd64 untar -s https://molassesbamboo.sfo3.digitaloceanspaces.com/v-sekai/v-sekai-game/store -i https://molassesbamboo.sfo3.digitaloceanspaces.com/v-sekai/v-sekai-game/vsk_game.caidx VSK_game --no-same-owner</code></pre>" >> ./archive/index.html
          echo "<pre><code>./desync-linux-amd64 untar -s https://molassesbamboo.sfo3.digitaloceanspaces.com/v-sekai/v-sekai-game/store -i https://molassesbamboo.sfo3.digitaloceanspaces.com/v-sekai/v-sekai-game/vsk_godot.caidx VSK_godot --no-same-owner</code></pre>" >> ./archive/index.html

          echo "<ul>" >> ./archive/index.html
          # List desync binaries first
          for file in $(ls ./archive/desync-* 2> /dev/null); do
          stripped_file=$(echo "$file" | sed 's|./archive/||')
          echo "<li><a href=\"https://molassesbamboo.sfo3.digitaloceanspaces.com/v-sekai/v-sekai-game/$stripped_file\">$stripped_file</a></li>" >> ./archive/index.html
          done
          # Then list caidx files
          for file in $(ls ./archive/*.caidx 2> /dev/null); do
          stripped_file=$(echo "$file" | sed 's|./archive/||')
          echo "<li><a href=\"https://molassesbamboo.sfo3.digitaloceanspaces.com/v-sekai/v-sekai-game/$stripped_file\">$stripped_file</a></li>" >> ./archive/index.html
          done
          # Then list the remaining files
          find ./archive -type f ! -name 'desync-*' ! -name '*.caidx' | while read file; do
          stripped_file=$(echo "$file" | sed 's|./archive/||')
          echo "<li><a href=\"https://molassesbamboo.sfo3.digitaloceanspaces.com/v-sekai/v-sekai-game/$stripped_file\">$stripped_file</a></li>" >> ./archive/index.html
          done
          echo "</ul>" >> ./archive/index.html
          echo "</body>" >> ./archive 
          echo "</html>" >> ./archive/index.html

      - name: Upload Archive
        uses: actions/upload-artifact@v2
        with:
          name: archive
          path: archive/

  deploy:
    if: github.event_name == 'workflow_dispatch'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: archive
          path: "archive"

      - name: Setup s3cmd
        run: |
          sudo apt-get install s3cmd
          echo "[default]" > ~/.s3cfg
          # Write a how to setup the access and secret keys.
          # https://docs.digitalocean.com/products/spaces/reference/s3cmd-usage/#upload-files-to-a-space
          # https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions
          echo "access_key = ${{ secrets.DO_SPACES_ACCESS_KEY }}" >> ~/.s3cfg
          echo "secret_key = ${{ secrets.DO_SPACES_SECRET_KEY }}" >> ~/.s3cfg
          echo "host_base = sfo3.digitaloceanspaces.com" >> ~/.s3cfg
          echo "host_bucket = %(bucket)s.sfo3.digitaloceanspaces.com" >> ~/.s3cfg
          echo "enable_https = True" >> ~/.s3cfg

      - name: Upload to DigitalOcean Spaces
        run: s3cmd put archive/* s3://molassesbamboo/github/V-Sekai/v-sekai-game --recursive
